name: CI
on:
  # run it on push to the default repository branch
  push:
    branches: [main]
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: 0 1 */3 * *
env:
  PREFIX: "GeoLite2 GeoIP2"
  DATABASE: "ASN City Country ISP Domain Anonymous-IP Connection-Type Enterprise"
permissions:
  contents: write
# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true
jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Download GeoLite2
        run: |
          mkdir -p upload
          for pf in $PREFIX; do
            for db in $DATABASE; do
              db_name="$pf-$db"
              if wget -nv -O /tmp/$db_name.tar.gz "https://download.maxmind.com/app/geoip_download?edition_id=$db_name&license_key=${{ secrets.LICENSE_KEY }}&suffix=tar.gz" ;then
              tar -xvzf /tmp/$db_name.tar.gz --strip-components=1 -C upload
              fi
              if wget -nv -O /tmp/$db_name-CSV.zip "https://download.maxmind.com/app/geoip_download?edition_id=$db_name-CSV&license_key=${{ secrets.LICENSE_KEY }}&suffix=zip" ;then
              echo A |unzip -j /tmp/$db_name-CSV.zip -d upload
              fi
            done
          done
          echo "TAG_NAME=$(date +"%Y.%m.%d")" >> $GITHUB_ENV
      - name: Upload to ${{ env.TAG_NAME }}
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          body: ${{ github.sha }}
          files: |
            upload/*.mmdb
            upload/*.csv
      - name: Upload to Latest
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          tag_name: latest
          body: ${{ github.sha }}
          files: |
            upload/*.mmdb
            upload/GeoLite2*.csv
      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.2.0
        with:
          keep_latest: 5
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
